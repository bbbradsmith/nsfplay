#pragma once
// generated by nsfplayenums.py
// 2024-04-23 00:56:27

#include "../include/nsfplayenums.h"

const int32_t NSFPD_LIST_TEXT[NSFP_LIST_COUNT] = { // text+0 keys, +1 local keys
	   1,   3,
};

const int32_t NSFPD_UNIT_GROUP[NSFP_UNIT_COUNT] = {
	   1,   2,
};

typedef struct {
	const char* key;
	int32_t text; // text+0 name, +1 desc
} NSFSetGroupData;
const NSFSetGroupData NSFPD_GROUP[NSFP_GROUP_COUNT] = {
	{                         "MAIN",   5 },
	{                         "APU0",   7 },
	{                         "APU1",   9 },
};

typedef struct {
	const char* key;
	int32_t unit, text;
} NSFChannelData;
const NSFChannelData NSFPD_CHANNEL[NSFP_CHANNEL_COUNT] = {
	{                         "SQU0", 0,  11 },
	{                         "SQU1", 0,  12 },
	{                          "TRI", 1,  13 },
	{                          "NSE", 1,  14 },
	{                         "DPCM", 1,  15 },
};

typedef struct {
	const char* key;
	int32_t group, text; // text+0 name, +1 desc
	int32_t default_int, min_int, max_int, min_hint, max_hint;
	int32_t display, list;
	const char* default_str;
} NSFSetData;
const NSFSetData NSFPD_SET[NSFP_SET_COUNT] = {
	{                       "VOLUME",  0,  16,    500,      0,   8000,      0,   1000, 1, -1,NULL },
	{                   "SAMPLERATE",  0,  18,  48000,   1000,4000000,   8000,  96000,13, -1,NULL },
	{                       "STEREO",  0,  20,      1,      0,      1,      0,      1, 6,  0,NULL },
	{                 "TITLE_FORMAT",  0,  22,      0,      0,      0,      0,      0, 3, -1,"%L (%n/%e) %T - %A" },
	{                          "HEX",  0,  24,     32,      0,    255,      0,    255, 7, -1,NULL },
	{                       "LOCALE",  0,  26,      0,      0,      1,      0,      1, 6,  1,NULL },
	{               "APU0_NONLINEAR",  1,  28,      1,      0,      1,      0,      1, 6,  0,NULL },
	{                      "SQU0_ON",  1,  30,      1,      0,      1,      0,      1, 6,  0,NULL },
	{                     "SQU0_VOL",  1,  32,    500,      0,   1000,      0,   1000, 1, -1,NULL },
	{                     "SQU0_PAN",  1,  34,    500,      0,   1000,      0,   1000, 1, -1,NULL },
	{                      "SQU1_ON",  1,  36,      1,      0,      1,      0,      1, 6,  0,NULL },
	{                     "SQU1_VOL",  1,  38,    500,      0,   1000,      0,   1000, 1, -1,NULL },
	{                     "SQU1_PAN",  1,  40,    500,      0,   1000,      0,   1000, 1, -1,NULL },
	{                       "TRI_ON",  2,  42,      1,      0,      1,      0,      1, 6,  0,NULL },
	{                      "TRI_VOL",  2,  44,    500,      0,   1000,      0,   1000, 1, -1,NULL },
	{                      "TRI_PAN",  2,  46,    500,      0,   1000,      0,   1000, 1, -1,NULL },
	{                       "NSE_ON",  2,  48,      1,      0,      1,      0,      1, 6,  0,NULL },
	{                      "NSE_VOL",  2,  50,    500,      0,   1000,      0,   1000, 1, -1,NULL },
	{                      "NSE_PAN",  2,  52,    500,      0,   1000,      0,   1000, 1, -1,NULL },
	{                      "DPCM_ON",  2,  54,      1,      0,      1,      0,      1, 6,  0,NULL },
	{                     "DPCM_VOL",  2,  56,    500,      0,   1000,      0,   1000, 1, -1,NULL },
	{                     "DPCM_PAN",  2,  58,    500,      0,   1000,      0,   1000, 1, -1,NULL },
};

typedef struct {
	const char* key;
	int32_t text, type, display; // text+0 name, +1 desc
	int32_t max_list, list;
} NSFPropData;
const NSFPropData NSFPD_PROP[NSFP_PROP_COUNT] = {
	{                   "SONG_COUNT",  60,1, 1,  0, -1 },
	{                         "LONG",  61,2, 3,  0, -1 },
	{                        "TITLE",  62,3, 3,  0, -1 },
	{                         "INFO",  63,4, 4,  0, -1 },
	{                         "BLOB",  64,5, 5,  0, -1 },
	{                         "LIST",  65,6, 6,  1,  0 },
};
const NSFPropData NSFPD_SONGPROP[NSFP_SONGPROP_COUNT] = {
	{                          "INT",  66,1, 7,  1, -1 },
	{                     "SONGTEST",  67,1, 8,  1, -1 },
	{                         "LONG",  68,2, 9,  1, -1 },
	{                        "TITLE",  69,3, 3,  1, -1 },
	{                         "INFO",  70,4, 4,  1, -1 },
	{                         "BLOB",  71,5, 5,  1, -1 },
	{                         "LIST",  72,6, 6,  1,  0 },
};

const int32_t NSFPD_LOCAL_TEXT[NSFP_LOCALE_COUNT][82] = {
{
	0x000000,0x00000F,0x000018,0x000021,0x000034,0x000048,0x00004D,0x00005B,0x000060,0x00007A,0x00007F,0x0000A3,0x0000AC,0x0000B5,0x0000BE,0x0000C4,
	0x0000C9,0x0000D0,0x0000E7,0x0000F2,0x00010B,0x000112,0x00013A,0x000150,0x00016F,0x000173,0x00017E,0x000187,0x000199,0x0001A7,0x0001F1,0x0001FD,
	0x00020F,0x00021F,0x000230,0x00023D,0x00024F,0x00025B,0x00026D,0x00027D,0x00028E,0x00029B,0x0002AD,0x0002B9,0x0002CB,0x0002DB,0x0002EC,0x0002F9,
	0x00030B,0x000314,0x000323,0x000330,0x00033E,0x000348,0x000357,0x00035F,0x00036D,0x000379,0x000386,0x00038F,0x00039D,0x0003A8,0x0003AD,0x0003B3,
	0x0003B8,0x0003BD,0x0003C2,0x0003C6,0x0003A8,0x0003D0,0x0003B3,0x0003B8,0x0003BD,0x0003DB,0x0003EF,0x000411,0x000433,0x000467,0x000487,0x0004A9,
	0x000433,0x0004E1,
},
{
	0x000000,0x00000F,0x000018,0x000021,0x000034,0x000048,0x00004D,0x00005B,0x000060,0x00007A,0x00007F,0x0000A3,0x0000AC,0x0000B5,0x0000BE,0x0000C4,
	0x0000C9,0x0000D0,0x0000E7,0x0000F2,0x00010B,0x000112,0x00013A,0x000150,0x00016F,0x000173,0x00017E,0x000187,0x000199,0x0001A7,0x0001F1,0x0001FD,
	0x00020F,0x00021F,0x000230,0x00023D,0x00024F,0x00025B,0x00026D,0x00027D,0x00028E,0x00029B,0x0002AD,0x0002B9,0x0002CB,0x0002DB,0x0002EC,0x0002F9,
	0x00030B,0x000314,0x000323,0x000330,0x00033E,0x000348,0x000357,0x00035F,0x00036D,0x000379,0x000386,0x00038F,0x00039D,0x0003A8,0x0003AD,0x0003B3,
	0x0003B8,0x0003BD,0x0003C2,0x0003C6,0x0003A8,0x0003D0,0x0003B3,0x0003B8,0x0003BD,0x0003E5,0x0003FF,0x000424,0x000454,0x000473,0x000497,0x0004BB,
	0x0004CD,0x000509,
},
};

const uint8_t NSFPD_LOCAL_TEXT_DATA[0x000520] = {
	0x3C,0x4D,0x49,0x53,0x53,0x49,0x4E,0x47,0x20,0x54,0x45,0x58,0x54,0x3E,0x00,0x4F,0x46,0x46,0x00,0x4F,0x4E,0x00,0x00,0x00,0x4F,0x66,0x66,0x00,0x4F,0x6E,0x00,0x00,
	0x00,0x45,0x4E,0x47,0x4C,0x49,0x53,0x48,0x00,0x4A,0x41,0x50,0x41,0x4E,0x45,0x53,0x45,0x00,0x00,0x00,0x45,0x6E,0x67,0x6C,0x69,0x73,0x68,0x00,0xE6,0x97,0xA5,0xE6,
	0x9C,0xAC,0xE8,0xAA,0x9E,0x00,0x00,0x00,0x4D,0x61,0x69,0x6E,0x00,0x4D,0x61,0x69,0x6E,0x20,0x53,0x65,0x74,0x74,0x69,0x6E,0x67,0x73,0x00,0x41,0x50,0x55,0x30,0x00,
	0x42,0x75,0x69,0x6C,0x74,0x2D,0x69,0x6E,0x20,0x73,0x71,0x75,0x61,0x72,0x65,0x20,0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C,0x73,0x2E,0x00,0x41,0x50,0x55,0x31,0x00,0x42,
	0x75,0x69,0x6C,0x74,0x2D,0x69,0x6E,0x20,0x74,0x72,0x69,0x61,0x6E,0x67,0x6C,0x65,0x2C,0x20,0x6E,0x6F,0x69,0x73,0x65,0x2C,0x20,0x61,0x6E,0x64,0x20,0x44,0x50,0x43,
	0x4D,0x2E,0x00,0x53,0x71,0x75,0x61,0x72,0x65,0x20,0x30,0x00,0x53,0x71,0x75,0x61,0x72,0x65,0x20,0x31,0x00,0x54,0x72,0x69,0x61,0x6E,0x67,0x6C,0x65,0x00,0x4E,0x6F,
	0x69,0x73,0x65,0x00,0x44,0x50,0x43,0x4D,0x00,0x56,0x6F,0x6C,0x75,0x6D,0x65,0x00,0x54,0x6F,0x74,0x61,0x6C,0x20,0x6F,0x75,0x74,0x70,0x75,0x74,0x20,0x6C,0x6F,0x75,
	0x64,0x6E,0x65,0x73,0x73,0x2E,0x00,0x53,0x61,0x6D,0x70,0x6C,0x65,0x72,0x61,0x74,0x65,0x00,0x41,0x75,0x64,0x69,0x6F,0x20,0x6F,0x75,0x74,0x70,0x75,0x74,0x20,0x73,
	0x61,0x6D,0x70,0x6C,0x65,0x72,0x61,0x74,0x65,0x2E,0x00,0x53,0x74,0x65,0x72,0x65,0x6F,0x00,0x44,0x69,0x73,0x61,0x62,0x6C,0x65,0x20,0x74,0x6F,0x20,0x6F,0x75,0x74,
	0x70,0x75,0x74,0x20,0x31,0x2D,0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C,0x20,0x6D,0x6F,0x6E,0x6F,0x20,0x73,0x6F,0x75,0x6E,0x64,0x2E,0x00,0x4E,0x53,0x46,0x20,0x73,0x6F,
	0x6E,0x67,0x20,0x74,0x69,0x74,0x6C,0x65,0x20,0x66,0x6F,0x72,0x6D,0x61,0x74,0x00,0x53,0x65,0x65,0x20,0x64,0x6F,0x63,0x75,0x6D,0x65,0x6E,0x74,0x61,0x74,0x69,0x6F,
	0x6E,0x20,0x66,0x6F,0x72,0x20,0x64,0x65,0x74,0x61,0x69,0x6C,0x73,0x2E,0x00,0x48,0x65,0x78,0x00,0x76,0x61,0x6C,0x75,0x65,0x20,0x74,0x65,0x73,0x74,0x00,0x4C,0x61,
	0x6E,0x67,0x75,0x61,0x67,0x65,0x00,0x44,0x69,0x73,0x70,0x6C,0x61,0x79,0x20,0x6C,0x61,0x6E,0x67,0x75,0x61,0x67,0x65,0x2E,0x00,0x4E,0x6F,0x6E,0x6C,0x69,0x6E,0x65,
	0x61,0x72,0x20,0x4D,0x69,0x78,0x00,0x54,0x68,0x65,0x20,0x76,0x6F,0x6C,0x75,0x6D,0x65,0x20,0x6F,0x66,0x20,0x65,0x61,0x63,0x68,0x20,0x73,0x71,0x75,0x61,0x72,0x65,
	0x20,0x61,0x66,0x66,0x65,0x63,0x74,0x73,0x20,0x74,0x68,0x65,0x20,0x6F,0x74,0x68,0x65,0x72,0x2C,0x20,0x63,0x61,0x75,0x73,0x69,0x6E,0x67,0x20,0x61,0x20,0x64,0x69,
	0x73,0x74,0x6F,0x72,0x74,0x69,0x6F,0x6E,0x20,0x65,0x66,0x66,0x65,0x63,0x74,0x2E,0x00,0x53,0x71,0x75,0x61,0x72,0x65,0x20,0x30,0x20,0x4F,0x6E,0x00,0x53,0x71,0x75,
	0x61,0x72,0x65,0x20,0x30,0x20,0x65,0x6E,0x61,0x62,0x6C,0x65,0x64,0x2E,0x00,0x53,0x71,0x75,0x61,0x72,0x65,0x20,0x30,0x20,0x56,0x6F,0x6C,0x75,0x6D,0x65,0x00,0x53,
	0x71,0x75,0x61,0x72,0x65,0x20,0x30,0x20,0x76,0x6F,0x6C,0x75,0x6D,0x65,0x2E,0x00,0x53,0x71,0x75,0x61,0x72,0x65,0x20,0x30,0x20,0x50,0x61,0x6E,0x00,0x53,0x71,0x75,
	0x61,0x72,0x65,0x20,0x30,0x20,0x70,0x61,0x6E,0x6E,0x69,0x6E,0x67,0x2E,0x00,0x53,0x71,0x75,0x61,0x72,0x65,0x20,0x31,0x20,0x4F,0x6E,0x00,0x53,0x71,0x75,0x61,0x72,
	0x65,0x20,0x31,0x20,0x65,0x6E,0x61,0x62,0x6C,0x65,0x64,0x2E,0x00,0x53,0x71,0x75,0x61,0x72,0x65,0x20,0x31,0x20,0x56,0x6F,0x6C,0x75,0x6D,0x65,0x00,0x53,0x71,0x75,
	0x61,0x72,0x65,0x20,0x31,0x20,0x76,0x6F,0x6C,0x75,0x6D,0x65,0x2E,0x00,0x53,0x71,0x75,0x61,0x72,0x65,0x20,0x31,0x20,0x50,0x61,0x6E,0x00,0x53,0x71,0x75,0x61,0x72,
	0x65,0x20,0x31,0x20,0x70,0x61,0x6E,0x6E,0x69,0x6E,0x67,0x2E,0x00,0x54,0x72,0x69,0x61,0x6E,0x67,0x6C,0x65,0x20,0x4F,0x6E,0x00,0x54,0x72,0x69,0x61,0x6E,0x67,0x6C,
	0x65,0x20,0x65,0x6E,0x61,0x62,0x6C,0x65,0x64,0x2E,0x00,0x54,0x72,0x69,0x61,0x6E,0x67,0x6C,0x65,0x20,0x56,0x6F,0x6C,0x75,0x6D,0x65,0x00,0x54,0x72,0x69,0x61,0x6E,
	0x67,0x6C,0x65,0x20,0x76,0x6F,0x6C,0x75,0x6D,0x65,0x2E,0x00,0x54,0x72,0x69,0x61,0x6E,0x67,0x6C,0x65,0x20,0x50,0x61,0x6E,0x00,0x54,0x72,0x69,0x61,0x6E,0x67,0x6C,
	0x65,0x20,0x70,0x61,0x6E,0x6E,0x69,0x6E,0x67,0x2E,0x00,0x4E,0x6F,0x69,0x73,0x65,0x20,0x4F,0x6E,0x00,0x4E,0x6F,0x69,0x73,0x65,0x20,0x65,0x6E,0x61,0x62,0x6C,0x65,
	0x64,0x2E,0x00,0x4E,0x6F,0x69,0x73,0x65,0x20,0x56,0x6F,0x6C,0x75,0x6D,0x65,0x00,0x4E,0x6F,0x69,0x73,0x65,0x20,0x76,0x6F,0x6C,0x75,0x6D,0x65,0x2E,0x00,0x4E,0x6F,
	0x69,0x73,0x65,0x20,0x50,0x61,0x6E,0x00,0x4E,0x6F,0x69,0x73,0x65,0x20,0x70,0x61,0x6E,0x6E,0x69,0x6E,0x67,0x2E,0x00,0x44,0x50,0x43,0x4D,0x20,0x4F,0x6E,0x00,0x44,
	0x50,0x43,0x4D,0x20,0x65,0x6E,0x61,0x62,0x6C,0x65,0x64,0x2E,0x00,0x44,0x50,0x43,0x4D,0x20,0x56,0x6F,0x6C,0x75,0x6D,0x65,0x00,0x44,0x50,0x43,0x4D,0x20,0x76,0x6F,
	0x6C,0x75,0x6D,0x65,0x2E,0x00,0x44,0x50,0x43,0x4D,0x20,0x50,0x61,0x6E,0x00,0x44,0x50,0x43,0x4D,0x20,0x70,0x61,0x6E,0x6E,0x69,0x6E,0x67,0x2E,0x00,0x53,0x6F,0x6E,
	0x67,0x20,0x63,0x6F,0x75,0x6E,0x74,0x00,0x4C,0x6F,0x6E,0x67,0x00,0x54,0x69,0x74,0x6C,0x65,0x00,0x49,0x6E,0x66,0x6F,0x00,0x42,0x6C,0x6F,0x62,0x00,0x4C,0x69,0x73,
	0x74,0x00,0x49,0x6E,0x74,0x00,0x53,0x6F,0x6E,0x67,0x20,0x74,0x65,0x73,0x74,0x00,0x53,0x6F,0x6E,0x67,0x20,0x74,0x69,0x74,0x6C,0x65,0x00,0x54,0x65,0x73,0x74,0x20,
	0x54,0x65,0x78,0x74,0x00,0x54,0x45,0x58,0x54,0x5F,0x54,0x45,0x58,0x54,0x00,0x49,0x6E,0x76,0x61,0x6C,0x69,0x64,0x20,0x73,0x65,0x74,0x74,0x69,0x6E,0x67,0x00,0x45,
	0x52,0x52,0x4F,0x52,0x5F,0x53,0x45,0x54,0x5F,0x49,0x4E,0x56,0x41,0x4C,0x49,0x44,0x00,0x57,0x72,0x6F,0x6E,0x67,0x20,0x73,0x65,0x74,0x74,0x69,0x6E,0x67,0x20,0x74,
	0x79,0x70,0x65,0x00,0x45,0x52,0x52,0x4F,0x52,0x5F,0x53,0x45,0x54,0x5F,0x54,0x59,0x50,0x45,0x00,0x53,0x65,0x74,0x74,0x69,0x6E,0x67,0x20,0x6F,0x75,0x74,0x20,0x6F,
	0x66,0x20,0x72,0x61,0x6E,0x67,0x65,0x3A,0x20,0x25,0x64,0x20,0x28,0x25,0x64,0x2D,0x25,0x64,0x29,0x00,0x45,0x52,0x52,0x4F,0x52,0x5F,0x53,0x45,0x54,0x49,0x4E,0x54,
	0x5F,0x52,0x41,0x4E,0x47,0x45,0x00,0x4D,0x69,0x73,0x73,0x69,0x6E,0x67,0x20,0x27,0x3D,0x27,0x00,0x45,0x52,0x52,0x4F,0x52,0x5F,0x49,0x4E,0x49,0x5F,0x4E,0x4F,0x5F,
	0x45,0x51,0x55,0x41,0x4C,0x53,0x00,0x55,0x6E,0x6B,0x6E,0x6F,0x77,0x6E,0x20,0x73,0x65,0x74,0x74,0x69,0x6E,0x67,0x00,0x45,0x52,0x52,0x4F,0x52,0x5F,0x49,0x4E,0x49,
	0x5F,0x42,0x41,0x44,0x5F,0x4B,0x45,0x59,0x00,0x42,0x61,0x64,0x20,0x69,0x6E,0x74,0x65,0x67,0x65,0x72,0x20,0x76,0x61,0x6C,0x75,0x65,0x00,0x45,0x52,0x52,0x4F,0x52,
	0x5F,0x49,0x4E,0x49,0x5F,0x42,0x41,0x44,0x5F,0x49,0x4E,0x54,0x00,0x45,0x52,0x52,0x4F,0x52,0x5F,0x49,0x4E,0x49,0x5F,0x42,0x41,0x44,0x5F,0x52,0x41,0x4E,0x47,0x45,
	0x00,0x56,0x61,0x6C,0x75,0x65,0x20,0x6E,0x6F,0x74,0x20,0x61,0x6E,0x20,0x69,0x6E,0x74,0x65,0x67,0x65,0x72,0x20,0x6F,0x72,0x20,0x6C,0x69,0x73,0x74,0x20,0x6B,0x65,
	0x79,0x20,0x66,0x6F,0x72,0x20,0x25,0x73,0x00,0x45,0x52,0x52,0x4F,0x52,0x5F,0x49,0x4E,0x49,0x5F,0x42,0x41,0x44,0x5F,0x4C,0x49,0x53,0x54,0x5F,0x4B,0x45,0x59,0x00,
};

// end of file
