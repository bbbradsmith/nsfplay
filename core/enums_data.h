#pragma once
// generated by nsfplayenums.py
// 2024-04-22 00:45:03

#include "../include/nsfplayenums.h"

const int32_t NSFPD_LIST_TEXT[NSFP_LIST_COUNT] = {
	   1,   2,
};

typedef struct {
	const char* key;
	int32_t text;
} NSFSetGroupData;
const NSFSetGroupData NSFPD_GROUP[NSFP_GROUP_COUNT] = {
	{                         "MAIN",   3 },
	{                         "APU0",   5 },
	{                         "APU1",   7 },
};

typedef struct {
	const char* key;
	int32_t unit, text;
} NSFChannelData;
const NSFChannelData NSFPD_CHANNEL[NSFP_CHANNEL_COUNT] = {
	{                         "SQU0", 0,   9 },
	{                         "SQU1", 0,  10 },
	{                          "TRI", 1,  11 },
	{                          "NSE", 1,  12 },
	{                         "DPCM", 1,  13 },
};

typedef struct {
	const char* key;
	int32_t group, text;
	int32_t default_int, min_int, max_int, list;
	const char* default_str;
} NSFSetData;
const NSFSetData NSFPD_SET[NSFP_SET_COUNT] = {
	{                       "VOLUME",  0,  14,    500,      0,   1000, -1,NULL },
	{                   "SAMPLERATE",  0,  16,  48000,   1000,4000000, -1,NULL },
	{                       "STEREO",  0,  18,      1,      0,      1,  0,NULL },
	{                 "TITLE_FORMAT",  0,  20,      0,      0,      0, -1,"%L (%n/%e) %T - %A" },
	{                       "LOCALE",  0,  22,      0,      0,      1,  1,NULL },
	{                      "SQU0_ON",  1,  24,      1,      0,      1,  0,NULL },
	{                     "SQU0_VOL",  1,  26,    500,      0,   1000, -1,NULL },
	{                     "SQU0_PAN",  1,  28,    500,      0,   1000, -1,NULL },
	{                      "SQU1_ON",  1,  30,      1,      0,      1,  0,NULL },
	{                     "SQU1_VOL",  1,  32,    500,      0,   1000, -1,NULL },
	{                     "SQU1_PAN",  1,  34,    500,      0,   1000, -1,NULL },
	{                       "TRI_ON",  2,  36,      1,      0,      1,  0,NULL },
	{                      "TRI_VOL",  2,  38,    500,      0,   1000, -1,NULL },
	{                      "TRI_PAN",  2,  40,    500,      0,   1000, -1,NULL },
	{                       "NSE_ON",  2,  42,      1,      0,      1,  0,NULL },
	{                      "NSE_VOL",  2,  44,    500,      0,   1000, -1,NULL },
	{                      "NSE_PAN",  2,  46,    500,      0,   1000, -1,NULL },
	{                      "DPCM_ON",  2,  48,      1,      0,      1,  0,NULL },
	{                     "DPCM_VOL",  2,  50,    500,      0,   1000, -1,NULL },
	{                     "DPCM_PAN",  2,  52,    500,      0,   1000, -1,NULL },
};

typedef struct {
	const char* key;
	int32_t type, text;
} NSFPropData;
const NSFPropData NSFPD_PROP[NSFP_PROP_COUNT] = {
	{                    "SONGCOUNT",1,  54 },
	{                         "LONG",2,  55 },
	{                        "TITLE",3,  56 },
	{                         "INFO",4,  57 },
	{                         "BLOB",5,  58 },
};

typedef struct {
	const char* key;
	int32_t type, text;
} NSFSongPropData;
const NSFSongPropData NSFPD_SONGPROP[NSFP_SONGPROP_COUNT] = {
	{                          "INT",1,  59 },
	{                     "SONGTEST",1,  60 },
	{                         "LONG",2,  61 },
	{                        "TITLE",3,  62 },
	{                         "INFO",4,  63 },
	{                         "BLOB",5,  64 },
};

const int32_t NSFPD_LOCAL_TEXT[NSFP_LOCALE_COUNT][73] = {
{
	0x000000,0x00000F,0x000017,0x00002A,0x00002F,0x00003D,0x000042,0x00003D,0x00003D,0x000066,0x00006B,0x000070,0x000074,0x000078,0x00007D,0x000084,
	0x00008B,0x000096,0x0000A1,0x0000A8,0x0000AF,0x0000BC,0x0000D2,0x0000D2,0x0000D9,0x0000D9,0x0000D9,0x0000D9,0x0000D9,0x0000D9,0x0000E0,0x0000E0,
	0x0000E0,0x0000E0,0x0000E0,0x0000E0,0x0000E7,0x0000E7,0x0000E7,0x0000E7,0x0000E7,0x0000E7,0x0000ED,0x0000ED,0x0000ED,0x0000ED,0x0000ED,0x0000ED,
	0x0000F3,0x0000F3,0x0000F3,0x0000F3,0x0000F3,0x0000F3,0x0000FA,0x000105,0x00010A,0x000110,0x000115,0x00011A,0x00011E,0x000105,0x000128,0x000110,
	0x000115,0x000133,0x000145,0x000167,0x000189,0x0001BD,0x0001E9,0x000217,0x000247,
},
{
	0x000000,0x00000F,0x000017,0x00002A,0x00002F,0x00003D,0x000042,0x00003D,0x00003D,0x000066,0x00006B,0x000070,0x000074,0x000078,0x00007D,0x000084,
	0x00008B,0x000096,0x0000A1,0x0000A8,0x0000AF,0x0000BC,0x0000D2,0x0000D2,0x0000D9,0x0000D9,0x0000D9,0x0000D9,0x0000D9,0x0000D9,0x0000E0,0x0000E0,
	0x0000E0,0x0000E0,0x0000E0,0x0000E0,0x0000E7,0x0000E7,0x0000E7,0x0000E7,0x0000E7,0x0000E7,0x0000ED,0x0000ED,0x0000ED,0x0000ED,0x0000ED,0x0000ED,
	0x0000F3,0x0000F3,0x0000F3,0x0000F3,0x0000F3,0x0000F3,0x0000FA,0x000105,0x00010A,0x000110,0x000115,0x00011A,0x00011E,0x000105,0x000128,0x000110,
	0x000115,0x00013D,0x000155,0x00017A,0x0001AA,0x0001D5,0x000205,0x000235,0x000274,
},
};

const uint8_t NSFPD_LOCAL_TEXT_DATA[0x000288] = {
	0x3C,0x4D,0x49,0x53,0x53,0x49,0x4E,0x47,0x20,0x54,0x45,0x58,0x54,0x3E,0x00,0x4F,0x66,0x66,0x00,0x4F,0x6E,0x00,0x00,0x45,0x6E,0x67,0x6C,0x69,0x73,0x68,0x00,0xE6,
	0x97,0xA5,0xE6,0x9C,0xAC,0xE8,0xAA,0x9E,0x00,0x00,0x4D,0x61,0x69,0x6E,0x00,0x4D,0x61,0x69,0x6E,0x20,0x53,0x65,0x74,0x74,0x69,0x6E,0x67,0x73,0x00,0x41,0x50,0x55,
	0x31,0x00,0x42,0x75,0x69,0x6C,0x74,0x2D,0x69,0x6E,0x20,0x74,0x72,0x69,0x61,0x6E,0x67,0x6C,0x65,0x2C,0x20,0x6E,0x6F,0x69,0x73,0x65,0x2C,0x20,0x61,0x6E,0x64,0x20,
	0x44,0x50,0x43,0x4D,0x2E,0x00,0x53,0x51,0x55,0x30,0x00,0x53,0x51,0x55,0x31,0x00,0x54,0x52,0x49,0x00,0x4E,0x53,0x45,0x00,0x44,0x50,0x43,0x4D,0x00,0x56,0x4F,0x4C,
	0x55,0x4D,0x45,0x00,0x56,0x6F,0x6C,0x75,0x6D,0x65,0x00,0x53,0x41,0x4D,0x50,0x4C,0x45,0x52,0x41,0x54,0x45,0x00,0x53,0x61,0x6D,0x70,0x6C,0x65,0x72,0x61,0x74,0x65,
	0x00,0x53,0x54,0x45,0x52,0x45,0x4F,0x00,0x53,0x74,0x65,0x72,0x65,0x6F,0x00,0x54,0x49,0x54,0x4C,0x45,0x5F,0x46,0x4F,0x52,0x4D,0x41,0x54,0x00,0x4E,0x53,0x46,0x20,
	0x73,0x6F,0x6E,0x67,0x20,0x74,0x69,0x74,0x6C,0x65,0x20,0x66,0x6F,0x72,0x6D,0x61,0x74,0x00,0x4C,0x4F,0x43,0x41,0x4C,0x45,0x00,0x53,0x51,0x55,0x30,0x4F,0x4E,0x00,
	0x53,0x51,0x55,0x31,0x4F,0x4E,0x00,0x54,0x52,0x49,0x4F,0x4E,0x00,0x4E,0x53,0x45,0x4F,0x4E,0x00,0x44,0x50,0x43,0x4D,0x4F,0x4E,0x00,0x53,0x6F,0x6E,0x67,0x20,0x63,
	0x6F,0x75,0x6E,0x74,0x00,0x4C,0x4F,0x4E,0x47,0x00,0x54,0x49,0x54,0x4C,0x45,0x00,0x49,0x4E,0x46,0x4F,0x00,0x42,0x4C,0x4F,0x42,0x00,0x49,0x4E,0x54,0x00,0x53,0x6F,
	0x6E,0x67,0x20,0x74,0x65,0x73,0x74,0x00,0x53,0x6F,0x6E,0x67,0x20,0x74,0x69,0x74,0x6C,0x65,0x00,0x54,0x65,0x73,0x74,0x20,0x54,0x65,0x78,0x74,0x00,0x67,0x6F,0x6F,
	0x64,0x62,0x79,0x65,0x00,0x49,0x6E,0x76,0x61,0x6C,0x69,0x64,0x20,0x73,0x65,0x74,0x74,0x69,0x6E,0x67,0x00,0x45,0x52,0x52,0x4F,0x52,0x5F,0x53,0x45,0x54,0x5F,0x49,
	0x4E,0x56,0x41,0x4C,0x49,0x44,0x00,0x57,0x72,0x6F,0x6E,0x67,0x20,0x73,0x65,0x74,0x74,0x69,0x6E,0x67,0x20,0x74,0x79,0x70,0x65,0x00,0x45,0x52,0x52,0x4F,0x52,0x5F,
	0x53,0x45,0x54,0x5F,0x54,0x59,0x50,0x45,0x00,0x53,0x65,0x74,0x74,0x69,0x6E,0x67,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x72,0x61,0x6E,0x67,0x65,0x3A,0x20,0x25,
	0x64,0x20,0x28,0x25,0x64,0x2D,0x25,0x64,0x29,0x00,0x45,0x52,0x52,0x4F,0x52,0x5F,0x53,0x45,0x54,0x49,0x4E,0x54,0x5F,0x52,0x41,0x4E,0x47,0x45,0x00,0x49,0x4E,0x49,
	0x20,0x6C,0x69,0x6E,0x65,0x20,0x25,0x64,0x20,0x6D,0x69,0x73,0x73,0x69,0x6E,0x67,0x20,0x27,0x3D,0x27,0x00,0x45,0x52,0x52,0x4F,0x52,0x5F,0x49,0x4E,0x49,0x5F,0x4E,
	0x4F,0x5F,0x45,0x51,0x55,0x41,0x4C,0x53,0x00,0x49,0x4E,0x49,0x20,0x6C,0x69,0x6E,0x65,0x20,0x25,0x64,0x20,0x75,0x6E,0x6B,0x6E,0x6F,0x77,0x6E,0x20,0x73,0x65,0x74,
	0x74,0x69,0x6E,0x67,0x00,0x45,0x52,0x52,0x4F,0x52,0x5F,0x49,0x4E,0x49,0x5F,0x42,0x41,0x44,0x5F,0x4B,0x45,0x59,0x00,0x49,0x4E,0x49,0x20,0x6C,0x69,0x6E,0x65,0x20,
	0x25,0x64,0x20,0x62,0x61,0x64,0x20,0x69,0x6E,0x74,0x65,0x67,0x65,0x72,0x20,0x76,0x61,0x6C,0x75,0x65,0x00,0x45,0x52,0x52,0x4F,0x52,0x5F,0x49,0x4E,0x49,0x5F,0x42,
	0x41,0x44,0x5F,0x49,0x4E,0x54,0x00,0x49,0x4E,0x49,0x20,0x6C,0x69,0x6E,0x65,0x20,0x25,0x64,0x20,0x73,0x65,0x74,0x74,0x69,0x6E,0x67,0x20,0x6F,0x75,0x74,0x20,0x6F,
	0x66,0x20,0x72,0x61,0x6E,0x67,0x65,0x3A,0x20,0x25,0x64,0x20,0x28,0x25,0x64,0x2D,0x25,0x64,0x29,0x00,0x45,0x52,0x52,0x4F,0x52,0x5F,0x49,0x4E,0x49,0x5F,0x42,0x41,
	0x44,0x5F,0x52,0x41,0x4E,0x47,0x45,0x00,
};

// end of file
